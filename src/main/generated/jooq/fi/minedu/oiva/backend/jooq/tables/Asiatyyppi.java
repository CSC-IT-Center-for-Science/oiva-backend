/*
 * This file is generated by jOOQ.
*/
package fi.minedu.oiva.backend.jooq.tables;


import fi.minedu.oiva.backend.entity.AsiatyyppiValue;
import fi.minedu.oiva.backend.entity.AsiatyyppiValue.Converter;
import fi.minedu.oiva.backend.entity.TranslatedString;
import fi.minedu.oiva.backend.jooq.Keys;
import fi.minedu.oiva.backend.jooq.Oiva;
import fi.minedu.oiva.backend.jooq.TranslatedStringBinding;
import fi.minedu.oiva.backend.jooq.tables.records.AsiatyyppiRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Asiatyyppi extends TableImpl<AsiatyyppiRecord> {

    private static final long serialVersionUID = -1183192033;

    /**
     * The reference instance of <code>oiva.asiatyyppi</code>
     */
    public static final Asiatyyppi ASIATYYPPI = new Asiatyyppi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AsiatyyppiRecord> getRecordType() {
        return AsiatyyppiRecord.class;
    }

    /**
     * The column <code>oiva.asiatyyppi.id</code>.
     */
    public final TableField<AsiatyyppiRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('asiatyyppi_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>oiva.asiatyyppi.tunniste</code>.
     */
    public final TableField<AsiatyyppiRecord, AsiatyyppiValue> TUNNISTE = createField("tunniste", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "", new Converter());

    /**
     * The column <code>oiva.asiatyyppi.selite</code>.
     */
    public final TableField<AsiatyyppiRecord, TranslatedString> SELITE = createField("selite", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "", new TranslatedStringBinding());

    /**
     * Create a <code>oiva.asiatyyppi</code> table reference
     */
    public Asiatyyppi() {
        this("asiatyyppi", null);
    }

    /**
     * Create an aliased <code>oiva.asiatyyppi</code> table reference
     */
    public Asiatyyppi(String alias) {
        this(alias, ASIATYYPPI);
    }

    private Asiatyyppi(String alias, Table<AsiatyyppiRecord> aliased) {
        this(alias, aliased, null);
    }

    private Asiatyyppi(String alias, Table<AsiatyyppiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Oiva.OIVA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AsiatyyppiRecord, Long> getIdentity() {
        return Keys.IDENTITY_ASIATYYPPI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AsiatyyppiRecord> getPrimaryKey() {
        return Keys.ASIATYYPPI_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AsiatyyppiRecord>> getKeys() {
        return Arrays.<UniqueKey<AsiatyyppiRecord>>asList(Keys.ASIATYYPPI_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Asiatyyppi as(String alias) {
        return new Asiatyyppi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Asiatyyppi rename(String name) {
        return new Asiatyyppi(name, null);
    }
}
