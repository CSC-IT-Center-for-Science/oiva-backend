/*
 * This file is generated by jOOQ.
*/
package fi.minedu.oiva.backend.jooq.tables;


import fi.minedu.oiva.backend.jooq.DefaultSchema;
import fi.minedu.oiva.backend.jooq.Keys;
import fi.minedu.oiva.backend.jooq.tables.records.LupaLiiteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LupaLiite extends TableImpl<LupaLiiteRecord> {

    private static final long serialVersionUID = -1482470167;

    /**
     * The reference instance of <code>lupa_liite</code>
     */
    public static final LupaLiite LUPA_LIITE = new LupaLiite();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LupaLiiteRecord> getRecordType() {
        return LupaLiiteRecord.class;
    }

    /**
     * The column <code>lupa_liite.id</code>.
     */
    public final TableField<LupaLiiteRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lupa_liite_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>lupa_liite.lupa_id</code>.
     */
    public final TableField<LupaLiiteRecord, Long> LUPA_ID = createField("lupa_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa_liite.liite_id</code>.
     */
    public final TableField<LupaLiiteRecord, Long> LIITE_ID = createField("liite_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>lupa_liite</code> table reference
     */
    public LupaLiite() {
        this("lupa_liite", null);
    }

    /**
     * Create an aliased <code>lupa_liite</code> table reference
     */
    public LupaLiite(String alias) {
        this(alias, LUPA_LIITE);
    }

    private LupaLiite(String alias, Table<LupaLiiteRecord> aliased) {
        this(alias, aliased, null);
    }

    private LupaLiite(String alias, Table<LupaLiiteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LupaLiiteRecord, Long> getIdentity() {
        return Keys.IDENTITY_LUPA_LIITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LupaLiiteRecord> getPrimaryKey() {
        return Keys.LUPA_LIITE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LupaLiiteRecord>> getKeys() {
        return Arrays.<UniqueKey<LupaLiiteRecord>>asList(Keys.LUPA_LIITE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LupaLiiteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LupaLiiteRecord, ?>>asList(Keys.LUPA_LIITE__FK_LUPA, Keys.LUPA_LIITE__FK_LIITE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LupaLiite as(String alias) {
        return new LupaLiite(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LupaLiite rename(String name) {
        return new LupaLiite(name, null);
    }
}
