/*
 * This file is generated by jOOQ.
*/
package fi.minedu.oiva.backend.model.jooq.tables;


import com.fasterxml.jackson.databind.JsonNode;

import fi.minedu.oiva.backend.model.jooq.DefaultSchema;
import fi.minedu.oiva.backend.model.jooq.Keys;
import fi.minedu.oiva.backend.model.jooq.PostgresJSONJacksonBinding;
import fi.minedu.oiva.backend.model.jooq.tables.records.LupaRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lupa extends TableImpl<LupaRecord> {

    private static final long serialVersionUID = 122311171;

    /**
     * The reference instance of <code>lupa</code>
     */
    public static final Lupa LUPA = new Lupa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LupaRecord> getRecordType() {
        return LupaRecord.class;
    }

    /**
     * The column <code>lupa.id</code>.
     */
    public final TableField<LupaRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lupa_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>lupa.edellinen_lupa_id</code>.
     */
    public final TableField<LupaRecord, Long> EDELLINEN_LUPA_ID = createField("edellinen_lupa_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lupa.paatoskierros_id</code>.
     */
    public final TableField<LupaRecord, Long> PAATOSKIERROS_ID = createField("paatoskierros_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa.lupatila_id</code>.
     */
    public final TableField<LupaRecord, Long> LUPATILA_ID = createField("lupatila_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa.asiatyyppi_id</code>.
     */
    public final TableField<LupaRecord, Long> ASIATYYPPI_ID = createField("asiatyyppi_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa.diaarinumero</code>.
     */
    public final TableField<LupaRecord, String> DIAARINUMERO = createField("diaarinumero", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("concat(nextval('diaarinumero_seq'::regclass), '/999/', date_part('year'::text, (now())::date))", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>lupa.jarjestaja_ytunnus</code>.
     */
    public final TableField<LupaRecord, String> JARJESTAJA_YTUNNUS = createField("jarjestaja_ytunnus", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>lupa.jarjestaja_oid</code>.
     */
    public final TableField<LupaRecord, String> JARJESTAJA_OID = createField("jarjestaja_oid", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>lupa.alkupvm</code>.
     */
    public final TableField<LupaRecord, Date> ALKUPVM = createField("alkupvm", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>lupa.loppupvm</code>.
     */
    public final TableField<LupaRecord, Date> LOPPUPVM = createField("loppupvm", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>lupa.paatospvm</code>.
     */
    public final TableField<LupaRecord, Date> PAATOSPVM = createField("paatospvm", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>lupa.meta</code>.
     */
    public final TableField<LupaRecord, JsonNode> META = createField("meta", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "", new PostgresJSONJacksonBinding());

    /**
     * The column <code>lupa.maksu</code>.
     */
    public final TableField<LupaRecord, Boolean> MAKSU = createField("maksu", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>lupa.luoja</code>.
     */
    public final TableField<LupaRecord, String> LUOJA = createField("luoja", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lupa.luontipvm</code>.
     */
    public final TableField<LupaRecord, Timestamp> LUONTIPVM = createField("luontipvm", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>lupa.paivittaja</code>.
     */
    public final TableField<LupaRecord, String> PAIVITTAJA = createField("paivittaja", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lupa.paivityspvm</code>.
     */
    public final TableField<LupaRecord, Timestamp> PAIVITYSPVM = createField("paivityspvm", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>lupa.uuid</code>.
     */
    public final TableField<LupaRecord, UUID> UUID = createField("uuid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v1()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>lupa.koulutustyyppi</code>.
     */
    public final TableField<LupaRecord, String> KOULUTUSTYYPPI = createField("koulutustyyppi", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>lupa.oppilaitostyyppi</code>.
     */
    public final TableField<LupaRecord, String> OPPILAITOSTYYPPI = createField("oppilaitostyyppi", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>lupa</code> table reference
     */
    public Lupa() {
        this("lupa", null);
    }

    /**
     * Create an aliased <code>lupa</code> table reference
     */
    public Lupa(String alias) {
        this(alias, LUPA);
    }

    private Lupa(String alias, Table<LupaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lupa(String alias, Table<LupaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LupaRecord, Long> getIdentity() {
        return Keys.IDENTITY_LUPA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LupaRecord> getPrimaryKey() {
        return Keys.LUPA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LupaRecord>> getKeys() {
        return Arrays.<UniqueKey<LupaRecord>>asList(Keys.LUPA_PKEY, Keys.LUPA_DIAARINUMERO_KEY, Keys.LUPA_UUID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LupaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LupaRecord, ?>>asList(Keys.LUPA__FK_PAATOSKIERROS, Keys.LUPA__FK_LUPATILA, Keys.LUPA__FK_ASIATYYPPI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lupa as(String alias) {
        return new Lupa(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lupa rename(String name) {
        return new Lupa(name, null);
    }
}
