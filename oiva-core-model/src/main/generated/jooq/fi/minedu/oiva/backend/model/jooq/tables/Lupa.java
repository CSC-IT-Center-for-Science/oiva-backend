/*
 * This file is generated by jOOQ.
 */
package fi.minedu.oiva.backend.model.jooq.tables;


import com.fasterxml.jackson.databind.JsonNode;

import fi.minedu.oiva.backend.model.jooq.DefaultSchema;
import fi.minedu.oiva.backend.model.jooq.Indexes;
import fi.minedu.oiva.backend.model.jooq.Keys;
import fi.minedu.oiva.backend.model.jooq.PostgresJSONJacksonBinding;
import fi.minedu.oiva.backend.model.jooq.tables.records.LupaRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row21;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lupa extends TableImpl<LupaRecord> {

    private static final long serialVersionUID = -930236771;

    /**
     * The reference instance of <code>lupa</code>
     */
    public static final Lupa LUPA = new Lupa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LupaRecord> getRecordType() {
        return LupaRecord.class;
    }

    /**
     * The column <code>lupa.id</code>.
     */
    public final TableField<LupaRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lupa_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>lupa.edellinen_lupa_id</code>.
     */
    public final TableField<LupaRecord, Long> EDELLINEN_LUPA_ID = createField(DSL.name("edellinen_lupa_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lupa.paatoskierros_id</code>.
     */
    public final TableField<LupaRecord, Long> PAATOSKIERROS_ID = createField(DSL.name("paatoskierros_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa.lupatila_id</code>.
     */
    public final TableField<LupaRecord, Long> LUPATILA_ID = createField(DSL.name("lupatila_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa.asiatyyppi_id</code>.
     */
    public final TableField<LupaRecord, Long> ASIATYYPPI_ID = createField(DSL.name("asiatyyppi_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lupa.diaarinumero</code>.
     */
    public final TableField<LupaRecord, String> DIAARINUMERO = createField(DSL.name("diaarinumero"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("concat(nextval('diaarinumero_seq'::regclass), '/999/', date_part('year'::text, (now())::date))", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>lupa.jarjestaja_ytunnus</code>.
     */
    public final TableField<LupaRecord, String> JARJESTAJA_YTUNNUS = createField(DSL.name("jarjestaja_ytunnus"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>lupa.jarjestaja_oid</code>.
     */
    public final TableField<LupaRecord, String> JARJESTAJA_OID = createField(DSL.name("jarjestaja_oid"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>lupa.alkupvm</code>.
     */
    public final TableField<LupaRecord, Date> ALKUPVM = createField(DSL.name("alkupvm"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>lupa.loppupvm</code>.
     */
    public final TableField<LupaRecord, Date> LOPPUPVM = createField(DSL.name("loppupvm"), org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>lupa.paatospvm</code>.
     */
    public final TableField<LupaRecord, Date> PAATOSPVM = createField(DSL.name("paatospvm"), org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>lupa.meta</code>.
     */
    public final TableField<LupaRecord, JsonNode> META = createField(DSL.name("meta"), org.jooq.impl.SQLDataType.JSONB, this, "", new PostgresJSONJacksonBinding());

    /**
     * The column <code>lupa.maksu</code>.
     */
    public final TableField<LupaRecord, Boolean> MAKSU = createField(DSL.name("maksu"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>lupa.luoja</code>.
     */
    public final TableField<LupaRecord, String> LUOJA = createField(DSL.name("luoja"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lupa.luontipvm</code>.
     */
    public final TableField<LupaRecord, Timestamp> LUONTIPVM = createField(DSL.name("luontipvm"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>lupa.paivittaja</code>.
     */
    public final TableField<LupaRecord, String> PAIVITTAJA = createField(DSL.name("paivittaja"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lupa.paivityspvm</code>.
     */
    public final TableField<LupaRecord, Timestamp> PAIVITYSPVM = createField(DSL.name("paivityspvm"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>lupa.uuid</code>.
     */
    public final TableField<LupaRecord, UUID> UUID = createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v1()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>lupa.koulutustyyppi</code>.
     */
    public final TableField<LupaRecord, String> KOULUTUSTYYPPI = createField(DSL.name("koulutustyyppi"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>lupa.oppilaitostyyppi</code>.
     */
    public final TableField<LupaRecord, String> OPPILAITOSTYYPPI = createField(DSL.name("oppilaitostyyppi"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>lupa.asianumero</code>.
     */
    public final TableField<LupaRecord, String> ASIANUMERO = createField(DSL.name("asianumero"), org.jooq.impl.SQLDataType.VARCHAR(17).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>lupa</code> table reference
     */
    public Lupa() {
        this(DSL.name("lupa"), null);
    }

    /**
     * Create an aliased <code>lupa</code> table reference
     */
    public Lupa(String alias) {
        this(DSL.name(alias), LUPA);
    }

    /**
     * Create an aliased <code>lupa</code> table reference
     */
    public Lupa(Name alias) {
        this(alias, LUPA);
    }

    private Lupa(Name alias, Table<LupaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lupa(Name alias, Table<LupaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Lupa(Table<O> child, ForeignKey<O, LupaRecord> key) {
        super(child, key, LUPA);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LUPA_PKEY, Indexes.LUPA_UUID_KEY);
    }

    @Override
    public Identity<LupaRecord, Long> getIdentity() {
        return Keys.IDENTITY_LUPA;
    }

    @Override
    public UniqueKey<LupaRecord> getPrimaryKey() {
        return Keys.LUPA_PKEY;
    }

    @Override
    public List<UniqueKey<LupaRecord>> getKeys() {
        return Arrays.<UniqueKey<LupaRecord>>asList(Keys.LUPA_PKEY, Keys.LUPA_UUID_KEY);
    }

    @Override
    public List<ForeignKey<LupaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LupaRecord, ?>>asList(Keys.LUPA__FK_PAATOSKIERROS, Keys.LUPA__FK_LUPATILA, Keys.LUPA__FK_ASIATYYPPI);
    }

    public Paatoskierros paatoskierros() {
        return new Paatoskierros(this, Keys.LUPA__FK_PAATOSKIERROS);
    }

    public Lupatila lupatila() {
        return new Lupatila(this, Keys.LUPA__FK_LUPATILA);
    }

    public Asiatyyppi asiatyyppi() {
        return new Asiatyyppi(this, Keys.LUPA__FK_ASIATYYPPI);
    }

    @Override
    public Lupa as(String alias) {
        return new Lupa(DSL.name(alias), this);
    }

    @Override
    public Lupa as(Name alias) {
        return new Lupa(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lupa rename(String name) {
        return new Lupa(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Lupa rename(Name name) {
        return new Lupa(name, null);
    }

    // -------------------------------------------------------------------------
    // Row21 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row21<Long, Long, Long, Long, Long, String, String, String, Date, Date, Date, JsonNode, Boolean, String, Timestamp, String, Timestamp, UUID, String, String, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }
}
