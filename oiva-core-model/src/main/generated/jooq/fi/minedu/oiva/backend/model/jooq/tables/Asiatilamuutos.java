/*
 * This file is generated by jOOQ.
 */
package fi.minedu.oiva.backend.model.jooq.tables;


import fi.minedu.oiva.backend.model.jooq.DefaultSchema;
import fi.minedu.oiva.backend.model.jooq.Indexes;
import fi.minedu.oiva.backend.model.jooq.Keys;
import fi.minedu.oiva.backend.model.jooq.tables.records.AsiatilamuutosRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Asiatilamuutos extends TableImpl<AsiatilamuutosRecord> {

    private static final long serialVersionUID = -488507340;

    /**
     * The reference instance of <code>asiatilamuutos</code>
     */
    public static final Asiatilamuutos ASIATILAMUUTOS = new Asiatilamuutos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AsiatilamuutosRecord> getRecordType() {
        return AsiatilamuutosRecord.class;
    }

    /**
     * The column <code>asiatilamuutos.id</code>.
     */
    public final TableField<AsiatilamuutosRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('asiatilamuutos_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>asiatilamuutos.alkutila</code>.
     */
    public final TableField<AsiatilamuutosRecord, String> ALKUTILA = createField(DSL.name("alkutila"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>asiatilamuutos.lopputila</code>.
     */
    public final TableField<AsiatilamuutosRecord, String> LOPPUTILA = createField(DSL.name("lopputila"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>asiatilamuutos.muutosaika</code>.
     */
    public final TableField<AsiatilamuutosRecord, Timestamp> MUUTOSAIKA = createField(DSL.name("muutosaika"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>asiatilamuutos.kayttajatunnus</code>.
     */
    public final TableField<AsiatilamuutosRecord, String> KAYTTAJATUNNUS = createField(DSL.name("kayttajatunnus"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>asiatilamuutos</code> table reference
     */
    public Asiatilamuutos() {
        this(DSL.name("asiatilamuutos"), null);
    }

    /**
     * Create an aliased <code>asiatilamuutos</code> table reference
     */
    public Asiatilamuutos(String alias) {
        this(DSL.name(alias), ASIATILAMUUTOS);
    }

    /**
     * Create an aliased <code>asiatilamuutos</code> table reference
     */
    public Asiatilamuutos(Name alias) {
        this(alias, ASIATILAMUUTOS);
    }

    private Asiatilamuutos(Name alias, Table<AsiatilamuutosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Asiatilamuutos(Name alias, Table<AsiatilamuutosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Asiatilamuutos(Table<O> child, ForeignKey<O, AsiatilamuutosRecord> key) {
        super(child, key, ASIATILAMUUTOS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASIATILAMUUTOS_PKEY);
    }

    @Override
    public Identity<AsiatilamuutosRecord, Long> getIdentity() {
        return Keys.IDENTITY_ASIATILAMUUTOS;
    }

    @Override
    public UniqueKey<AsiatilamuutosRecord> getPrimaryKey() {
        return Keys.ASIATILAMUUTOS_PKEY;
    }

    @Override
    public List<UniqueKey<AsiatilamuutosRecord>> getKeys() {
        return Arrays.<UniqueKey<AsiatilamuutosRecord>>asList(Keys.ASIATILAMUUTOS_PKEY);
    }

    @Override
    public Asiatilamuutos as(String alias) {
        return new Asiatilamuutos(DSL.name(alias), this);
    }

    @Override
    public Asiatilamuutos as(Name alias) {
        return new Asiatilamuutos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Asiatilamuutos rename(String name) {
        return new Asiatilamuutos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Asiatilamuutos rename(Name name) {
        return new Asiatilamuutos(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Timestamp, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
