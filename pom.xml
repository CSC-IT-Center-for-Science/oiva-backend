<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
    </parent>
    <name>Oiva Backend</name>
    <artifactId>backend</artifactId>
    <groupId>fi.minedu.oiva</groupId>
    <version>1.7.4</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.release.version>2.5.2</maven.release.version>
        <maven.resources.version>2.7</maven.resources.version>
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>

        <org.jooq.version>3.9.1</org.jooq.version>
        <model.mapper.version>0.7.7</model.mapper.version>
        <postgres.driver.version>42.1.4</postgres.driver.version>
        <cas.client.version>3.3.3</cas.client.version>
        <HikariCP.version>2.3.8</HikariCP.version>
        <flyway.version>4.2.0</flyway.version>
        <pebble.version>2.3.0</pebble.version>
        <jackson.version>2.8.7</jackson.version>

        <scala.version>2.11.7</scala.version>
        <scala.maven.version>3.2.0</scala.maven.version>
        <scalatest.version>2.2.1</scalatest.version>
        <scalatest.maven.version>1.0</scalatest.maven.version>

        <!-- overrides spring boot version -->
        <swagger.version>2.6.1</swagger.version>
        <tika.version>1.7</tika.version>
        <spring.data.redis.version>1.8.0.RELEASE</spring.data.redis.version>
        <spring-boot-starter.data.redis.version>1.5.1.RELEASE</spring-boot-starter.data.redis.version>
        <spring-security.version>4.2.1.RELEASE</spring-security.version>
        <spring.data.version>1.13.0.RELEASE</spring.data.version>
        <spring.ldap.version>2.3.1.RELEASE</spring.ldap.version>
        <spring.session.version>1.3.0.RELEASE</spring.session.version>
        <jersey.client.version>2.25.1</jersey.client.version>
    </properties>

    <scm>
        <developerConnection>scm:git:git@github.com:CSCfi/oiva-backend.git</developerConnection>
        <tag>1.7.4</tag>
    </scm>

    <repositories>
        <repository>
            <id>csc-releases</id>
            <name>CSC releases</name>
            <url>https://maven.csc.fi/repository/internal/</url>
        </repository>
        <repository>
            <id>csc-archiva</id>
            <name>CSC snapshots</name>
            <url>https://maven.csc.fi/repository/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>comphenix-rep</id>
            <name>Comphenix Maven Releases</name>
            <url>http://repo.comphenix.net/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
            <version>${spring.data.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.5</version>
        </dependency>

        <!-- security dependencies -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session</artifactId>
            <version>${spring.session.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-cas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jasig.cas.client</groupId>
            <artifactId>cas-client-core</artifactId>
            <version>${cas.client.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.future-converter</groupId>
            <artifactId>future-converter-spring-java8</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
            <version>${spring.ldap.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>5.5.1</version>
        </dependency>

        <!-- PDF report crunching .... NOTE THIS REQUIRES INSTALLATION OF LOCAL DEPENDENCIES !!!-->
        <!-- run install-prince.sh in the root -->
        <dependency>
            <groupId>com.princexml</groupId>
            <artifactId>prince-java</artifactId>
            <version>9</version>
        </dependency>
        <dependency>
            <groupId>com.mitchellbosecke</groupId>
            <artifactId>pebble-spring4</artifactId>
            <version>${pebble.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>1.8.10</version>
        </dependency>

        <!-- database dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!-- need Transient annotation -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>

        <!--spring-boot-starter-redis needs velocity(??)-->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring.data.redis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>${spring-boot-starter.data.redis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.driver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${org.jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.modelmapper.extensions</groupId>
            <artifactId>modelmapper-jooq</artifactId>
            <version>${model.mapper.version}</version>
        </dependency>

        <!-- helpers to process JSON, how many do we need? (3 already) -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20140107</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.5</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.ext.rx</groupId>
            <artifactId>jersey-rx-client-java8</artifactId>
            <version>${jersey.client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.client.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${HikariCP.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        <!-- For file meta data and content type extraction -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${tika.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <version>${tika.version}</version>
        </dependency>

        <!-- helpers for better Java 8 -->
        <dependency>
            <groupId>com.javaslang</groupId>
            <artifactId>javaslang</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jool</artifactId>
            <version>0.9.12</version>
        </dependency>
        <dependency>
            <groupId>com.aol.cyclops</groupId>
            <artifactId>cyclops-pattern-matching</artifactId>
            <version>6.0.2</version>
        </dependency>

        <!-- scala -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.0.5-beta</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.11</artifactId>
            <version>2.4.5</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.databinder.dispatch</groupId>
            <artifactId>dispatch-core_2.11</artifactId>
            <version>0.11.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-java8-compat_2.11</artifactId>
            <version>0.5.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.flywaydb.flyway-test-extensions</groupId>
            <artifactId>flyway-spring-test</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>oiva-backend</finalName>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>logback.xml</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>${jvm.fork.arguments}</jvmArguments>
                    <arguments>
                        <argument>--spring.profiles.active=dev</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.comphenix.maven</groupId>
                <artifactId>yaml-properties-plugin</artifactId>
                <version>0.1.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-yaml-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <app>${basedir}/src/main/resources/config/application.yml</app>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgres.driver.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <url>${yaml.app.spring.datasource.url}</url>
                    <username>${yaml.app.spring.datasource.username}</username>
                    <password>${yaml.app.spring.datasource.password}</password>
                    <driver>${yaml.app.spring.datasource.driverClassName}</driver>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-db</id>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>src/main/resources/drop.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>populate-db</id>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>../oiva-deployment/database/oiva-data.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <message>You are running an older version of Maven. Oiva Backend requires at least Maven 3.0</message>
                            <version>[3.0.0,)</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <message>You are running an older version of Java. Oiva Backend requires at least JDK ${java.version}</message>
                            <version>[${java.version}.0,)</version>
                        </requireJavaVersion>
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest.maven.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>Test</suffixes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>IT</suffixes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.maven.version}</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/generated/jooq</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.version}</version>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>logs/</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- hack for default variables -->
        <profile>
            <id>default-oiva-dbhost</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>!oiva.dbhost</name>
                </property>
            </activation>
            <properties>
                <oiva.dbhost>postgres</oiva.dbhost>
            </properties>
        </profile>
        <profile>
            <id>default-oiva-dbpassword</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>!oiva.dbpassword</name>
                </property>
            </activation>
            <properties>
                <oiva.dbpassword>oiva</oiva.dbpassword>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <logback.loglevel>DEBUG</logback.loglevel>
            </properties>
            <dependencies>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>false</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <arguments>
                                <argument>--spring.profiles.active=dev</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-db</id>
            <properties>
                <logback.loglevel>DEBUG</logback.loglevel>
                <oiva.dbhost>postgres</oiva.dbhost>
                <oiva.redishost>redis</oiva.redishost>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <version>${flyway.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>migrate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <url>${yaml.app.spring.datasource.url}</url>
                            <user>${yaml.app.spring.datasource.username}</user>
                            <password>${yaml.app.spring.datasource.password}</password>
                            <locations>
                                <location>filesystem:src/main/resources/db/migration</location>
                            </locations>
                            <validateOnMigrate>false</validateOnMigrate>
                            <baselineOnMigrate>true</baselineOnMigrate>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <version>${org.jooq.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres.driver.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>generate-postgres</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <jdbc>
                                        <driver>${yaml.app.spring.datasource.driverClassName}</driver>
                                        <url>${yaml.app.spring.datasource.url}</url>
                                        <user>${yaml.app.spring.datasource.username}</user>
                                        <password>${yaml.app.spring.datasource.password}</password>
                                    </jdbc>
                                    <generator>
                                        <name>org.jooq.util.DefaultGenerator</name>
                                        <database>
                                            <name>org.jooq.util.postgres.PostgresDatabase</name>
                                            <includes>.*</includes>
                                            <schemata>
                                                <schema>
                                                    <inputSchema>oiva</inputSchema>
                                                    <outputSchema>oiva</outputSchema>
                                                </schema>
                                            </schemata>
                                            <customTypes>
                                                <customType>
                                                    <name>JsonNode</name>
                                                    <type>com.fasterxml.jackson.databind.JsonNode</type>
                                                    <binding>fi.minedu.oiva.backend.jooq.PostgresJSONJacksonBinding</binding>
                                                </customType>
                                                <customType>
                                                    <name>Timestamp</name>
                                                    <type>java.sql.Timestamp</type>
                                                    <binding>org.jooq.impl.DateAsTimestampBinding</binding>
                                                </customType>
                                                <customType>
                                                    <name>TranslatedString</name>
                                                    <type>fi.minedu.oiva.backend.entity.TranslatedString</type>
                                                    <binding>fi.minedu.oiva.backend.jooq.TranslatedStringBinding</binding>
                                                </customType>
                                                <customType>
                                                    <name>AsiatyyppiValue</name>
                                                    <type>fi.minedu.oiva.backend.entity.AsiatyyppiValue</type>
                                                    <converter>fi.minedu.oiva.backend.entity.AsiatyyppiValue.Converter</converter>
                                                </customType>
                                                <customType>
                                                    <name>MaaraystyyppiValue</name>
                                                    <type>fi.minedu.oiva.backend.entity.MaaraystyyppiValue</type>
                                                    <converter>fi.minedu.oiva.backend.entity.MaaraystyyppiValue.Converter</converter>
                                                </customType>
                                                <customType>
                                                    <name>LupatilaValue</name>
                                                    <type>fi.minedu.oiva.backend.entity.LupatilaValue</type>
                                                    <converter>fi.minedu.oiva.backend.entity.LupatilaValue.Converter</converter>
                                                </customType>
                                                <customType>
                                                    <name>TekstityyppiValue</name>
                                                    <type>fi.minedu.oiva.backend.entity.TekstityyppiValue</type>
                                                    <converter>fi.minedu.oiva.backend.entity.TekstityyppiValue.Converter</converter>
                                                </customType>
                                            </customTypes>
                                            <forcedTypes>
                                                <forcedType>
                                                    <name>TranslatedString</name>
                                                    <expression>.*selite.*</expression>
                                                    <types>(?i).*jsonb.*</types>
                                                </forcedType>
                                                <forcedType>
                                                    <name>TranslatedString</name>
                                                    <expression>.*_i18n.*</expression>
                                                    <types>(?i).*jsonb.*</types>
                                                </forcedType>
                                                <forcedType>
                                                    <name>JsonNode</name>
                                                    <types>(?i).*json.*</types>
                                                </forcedType>
                                                <forcedType>
                                                    <name>AsiatyyppiValue</name>
                                                    <expression>.*asiatyyppi.tunniste</expression>
                                                </forcedType>
                                                <forcedType>
                                                    <name>MaaraystyyppiValue</name>
                                                    <expression>.*maaraystyyppi.tunniste</expression>
                                                </forcedType>
                                                <forcedType>
                                                    <name>LupatilaValue</name>
                                                    <expression>.*lupatila.tunniste</expression>
                                                </forcedType>
                                                <forcedType>
                                                    <name>TekstityyppiValue</name>
                                                    <expression>.*tekstityyppi.tunniste</expression>
                                                </forcedType>
                                            </forcedTypes>
                                        </database>
                                        <generate>
                                            <deprecated>false</deprecated>
                                            <instanceFields>true</instanceFields>
                                            <pojos>true</pojos>
                                            <validationAnnotations>true</validationAnnotations>
                                        </generate>
                                        <target>
                                            <packageName>fi.minedu.oiva.backend.jooq</packageName>
                                            <directory>src/main/generated/jooq</directory>
                                        </target>
                                    </generator>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <logback.loglevel>INFO</logback.loglevel>
            </properties>
            <dependencies>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <arguments>
                                <argument>--spring.profiles.active=prod</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>