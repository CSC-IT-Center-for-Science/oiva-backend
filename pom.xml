<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
    </parent>

    <name>Backend</name>
    <groupId>fi.minedu.oiva</groupId>
    <artifactId>oiva-backend</artifactId>
    <version>1.9.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.release.version>2.5.2</maven.release.version>
        <maven.resources.version>2.7</maven.resources.version>
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>

        <org.jooq.version>3.9.1</org.jooq.version>
        <model.mapper.version>0.7.7</model.mapper.version>
        <postgres.driver.version>42.1.4</postgres.driver.version>
        <postgres.driver.name>org.postgresql.Driver</postgres.driver.name>

        <cas.client.version>3.3.3</cas.client.version>
        <HikariCP.version>2.3.8</HikariCP.version>
        <flyway.version>4.2.0</flyway.version>
        <pebble.version>2.3.0</pebble.version>
        <jackson.version>2.8.7</jackson.version>

        <scala.version>2.11.7</scala.version>
        <scala.maven.version>3.2.0</scala.maven.version>
        <scalatest.version>2.2.1</scalatest.version>
        <scalatest.maven.version>1.0</scalatest.maven.version>

        <!-- overrides spring boot version -->
        <swagger.version>2.6.1</swagger.version>
        <tika.version>1.7</tika.version>
        <spring.data.redis.version>1.8.0.RELEASE</spring.data.redis.version>
        <spring-boot-starter.data.redis.version>1.5.1.RELEASE</spring-boot-starter.data.redis.version>
        <spring-security.version>4.2.1.RELEASE</spring-security.version>
        <spring.data.version>1.13.0.RELEASE</spring.data.version>
        <spring.session.version>1.3.0.RELEASE</spring.session.version>
        <jersey.client.version>2.25.1</jersey.client.version>
    </properties>

    <scm>
        <developerConnection>scm:git:git@github.com:CSCfi/oiva-backend.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <repositories>
        <repository>
            <id>csc-releases</id>
            <name>CSC releases</name>
            <url>https://maven.csc.fi/repository/internal/</url>
        </repository>
        <repository>
            <id>csc-archiva</id>
            <name>CSC snapshots</name>
            <url>https://maven.csc.fi/repository/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>comphenix-rep</id>
            <name>Comphenix Maven Releases</name>
            <url>http://repo.comphenix.net/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <modules>
        <module>oiva-core</module>
        <module>amos-model</module>
        <module>yva-model</module>
        <module>amos-backend</module>
        <module>yva-backend</module>
    </modules>

    <build>
	    <pluginManagement>
	    	<plugins>
				<plugin>
		            <groupId>org.codehaus.mojo</groupId>
		            <artifactId>sql-maven-plugin</artifactId>
		            <version>1.5</version>
		            <dependencies>
		                <dependency>
		                    <groupId>org.postgresql</groupId>
		                    <artifactId>postgresql</artifactId>
		                    <version>${postgres.driver.version}</version>
		                </dependency>
		            </dependencies>
		            <configuration>
		                <url>jdbc:postgresql://${oiva.dbhost}:${oiva.dbport}/${oiva.dbname}</url>
		                <username>${oiva.dbusername}</username>
		                <password>${oiva.dbpassword}</password>
		                <driver>${postgres.driver.name}</driver>
		            </configuration>
	           	</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<configuration>
					    <rules>
					        <requireMavenVersion>
					            <message>You are running an older version of Maven. Oiva Backend requires at least Maven 3.0</message>
					            <version>[3.0.0,)</version>
					        </requireMavenVersion>
					        <requireJavaVersion>
					            <message>You are running an older version of Java. Oiva Backend requires at least JDK ${java.version}</message>
					            <version>[${java.version}.0,)</version>
					        </requireJavaVersion>
					    </rules>
					</configuration>
				</plugin>
				<plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-surefire-plugin</artifactId>
	                <configuration>
	                    <skipTests>true</skipTests>
	                </configuration>
	            </plugin>
	            <plugin>
	                <groupId>net.alchim31.maven</groupId>
	                <artifactId>scala-maven-plugin</artifactId>
	                <version>${scala.maven.version}</version>
            	</plugin>
				<plugin>
	                <groupId>org.scalatest</groupId>
	                <artifactId>scalatest-maven-plugin</artifactId>
	                <version>${scalatest.maven.version}</version>
	                <configuration>
	                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
	                    <junitxml>.</junitxml>
	                </configuration>
            	</plugin>
            	<plugin>
	                <groupId>org.codehaus.mojo</groupId>
	                <artifactId>build-helper-maven-plugin</artifactId>
	            </plugin>
		            <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-resources-plugin</artifactId>
	                <version>${maven.resources.version}</version>
	                <configuration>
	                    <nonFilteredFileExtensions>
	                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
	                    </nonFilteredFileExtensions>
	                </configuration>
	            </plugin>
	            <plugin>
	                <artifactId>maven-clean-plugin</artifactId>
	                <version>3.0.0</version>
	                <configuration>
	                    <filesets>
	                        <fileset>
	                            <directory>logs/</directory>
	                            <followSymlinks>false</followSymlinks>
	                        </fileset>
	                    </filesets>
	                </configuration>
	            </plugin>
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway.version}</version>
                    <configuration>
                        <url>jdbc:postgresql://${oiva.dbhost}:${oiva.dbport}/${oiva.dbname}</url>
                        <user>${oiva.dbusername}</user>
                        <password>${oiva.dbpassword}</password>
                        <locations>
                            <location>filesystem:src/main/resources/db/migration</location>
                        </locations>
                        <validateOnMigrate>false</validateOnMigrate>
                        <baselineOnMigrate>true</baselineOnMigrate>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${org.jooq.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres.driver.version}</version>
                        </dependency>
                    </dependencies>
            	</plugin>
	    	</plugins>
	    </pluginManagement>
   </build>

    <dependencyManagement>
    	<dependencies>
            <dependency>
                <groupId>fi.minedu.oiva</groupId>
                <artifactId>oiva-core</artifactId>
                <version>1.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.8.5</version>
            </dependency>
	        <dependency>
	            <groupId>org.postgresql</groupId>
	            <artifactId>postgresql</artifactId>
	            <version>${postgres.driver.version}</version>
	        </dependency>
    		<dependency>
	            <groupId>org.scalatest</groupId>
	            <artifactId>scalatest_2.11</artifactId>
	            <version>${scalatest.version}</version>
	            <scope>test</scope>
	            <exclusions>
	                <exclusion>
	                    <groupId>org.scala-lang</groupId>
	                    <artifactId>scala-library</artifactId>
	                </exclusion>
	            </exclusions>
	        </dependency>
    	</dependencies>
    </dependencyManagement>
</project>